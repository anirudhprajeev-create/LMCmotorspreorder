{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/lib/crypto.ts"],"sourcesContent":["\nimport 'server-only';\nimport { SignJWT, jwtVerify } from 'jose';\n\nconst secretKey = process.env.SESSION_SECRET || \"default-secret-for-development\";\nconst key = new TextEncoder().encode(secretKey);\n\nexport async function encrypt(payload: any) {\n  return await new SignJWT(payload)\n    .setProtectedHeader({ alg: 'HS256' })\n    .setIssuedAt()\n    .setExpirationTime('24h')\n    .sign(key);\n}\n\nexport async function decrypt(input: string): Promise<any> {\n  try {\n    const { payload } = await jwtVerify(input, key, {\n      algorithms: ['HS256'],\n    });\n    return payload;\n  } catch (error) {\n    // This will be caught for expired tokens, invalid tokens, etc.\n    console.error('Failed to decrypt session:', error);\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AAAA;;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,cAAc,IAAI;AAChD,MAAM,MAAM,IAAI,cAAc,MAAM,CAAC;AAE9B,eAAe,QAAQ,OAAY;IACxC,OAAO,MAAM,IAAI,8JAAA,CAAA,UAAO,CAAC,SACtB,kBAAkB,CAAC;QAAE,KAAK;IAAQ,GAClC,WAAW,GACX,iBAAiB,CAAC,OAClB,IAAI,CAAC;AACV;AAEO,eAAe,QAAQ,KAAa;IACzC,IAAI;QACF,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,gKAAA,CAAA,YAAS,AAAD,EAAE,OAAO,KAAK;YAC9C,YAAY;gBAAC;aAAQ;QACvB;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,+DAA+D;QAC/D,QAAQ,KAAK,CAAC,8BAA8B;QAC5C,OAAO;IACT;AACF"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/lib/session.ts"],"sourcesContent":["\n'use server';\nimport { cookies } from 'next/headers';\nimport { encrypt, decrypt } from '@/lib/crypto';\n\nexport async function createSession() {\n  const expires = new Date(Date.now() + 24 * 60 * 60 * 1000); // 24 hours\n  const session = await encrypt({ expires });\n  cookies().set('session', session, { expires, httpOnly: true, secure: process.env.NODE_ENV === 'production' });\n}\n\nexport async function verifySession() {\n    const cookieStore = cookies();\n    const cookie = cookieStore.get('session')?.value;\n    if (!cookie) {\n        return { isAuth: false };\n    }\n\n    const session = await decrypt(cookie);\n    if (!session) {\n         return { isAuth: false };\n    }\n    \n    return { isAuth: true };\n}\n\n\nexport async function deleteSession() {\n  cookies().delete('session');\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AAFA;;;AAIO,eAAe;IACpB,MAAM,UAAU,IAAI,KAAK,KAAK,GAAG,KAAK,KAAK,KAAK,KAAK,OAAO,WAAW;IACvE,MAAM,UAAU,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD,EAAE;QAAE;IAAQ;IACxC,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD,IAAI,GAAG,CAAC,WAAW,SAAS;QAAE;QAAS,UAAU;QAAM,QAAQ,oDAAyB;IAAa;AAC7G;AAEO,eAAe;IAClB,MAAM,cAAc,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD;IAC1B,MAAM,SAAS,YAAY,GAAG,CAAC,YAAY;IAC3C,IAAI,CAAC,QAAQ;QACT,OAAO;YAAE,QAAQ;QAAM;IAC3B;IAEA,MAAM,UAAU,MAAM,CAAA,GAAA,4HAAA,CAAA,UAAO,AAAD,EAAE;IAC9B,IAAI,CAAC,SAAS;QACT,OAAO;YAAE,QAAQ;QAAM;IAC5B;IAEA,OAAO;QAAE,QAAQ;IAAK;AAC1B;AAGO,eAAe;IACpB,CAAA,GAAA,2KAAA,CAAA,UAAO,AAAD,IAAI,MAAM,CAAC;AACnB"}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["\nimport { NextRequest, NextResponse } from 'next/server';\nimport { verifySession } from '@/lib/session';\n\nexport const config = {\n  matcher: ['/admin/:path*', '/api/vehicle-manager'],\n};\n\nexport async function middleware(req: NextRequest) {\n  const path = req.nextUrl.pathname;\n\n  // Protect the vehicle manager API\n  if (path === '/api/vehicle-manager') {\n    const { isAuth } = await verifySession();\n    if (!isAuth) {\n      return NextResponse.json({ message: 'Unauthorized' }, { status: 401 });\n    }\n    return NextResponse.next();\n  }\n  \n  // Logic for admin pages\n  const isAdminPath = path.startsWith('/admin');\n  const isLoginPage = path.startsWith('/admin/login');\n  \n  if (isAdminPath) {\n    const { isAuth } = await verifySession();\n\n    if (isLoginPage && isAuth) {\n      // If user is authenticated and tries to access login page, redirect to dashboard\n      return NextResponse.redirect(new URL('/admin/dashboard', req.url));\n    }\n    \n    if (!isLoginPage && !isAuth) {\n      // If user is not authenticated and tries to access any other admin page, redirect to login\n      return NextResponse.redirect(new URL('/admin/login', req.url));\n    }\n  }\n\n  return NextResponse.next();\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;;;AAEO,MAAM,SAAS;IACpB,SAAS;QAAC;QAAiB;KAAuB;AACpD;AAEO,eAAe,WAAW,GAAgB;IAC/C,MAAM,OAAO,IAAI,OAAO,CAAC,QAAQ;IAEjC,kCAAkC;IAClC,IAAI,SAAS,wBAAwB;QACnC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD;QACrC,IAAI,CAAC,QAAQ;YACX,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,SAAS;YAAe,GAAG;gBAAE,QAAQ;YAAI;QACtE;QACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;IAC1B;IAEA,wBAAwB;IACxB,MAAM,cAAc,KAAK,UAAU,CAAC;IACpC,MAAM,cAAc,KAAK,UAAU,CAAC;IAEpC,IAAI,aAAa;QACf,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA,GAAA,6HAAA,CAAA,gBAAa,AAAD;QAErC,IAAI,eAAe,QAAQ;YACzB,iFAAiF;YACjF,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,oBAAoB,IAAI,GAAG;QAClE;QAEA,IAAI,CAAC,eAAe,CAAC,QAAQ;YAC3B,2FAA2F;YAC3F,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,gBAAgB,IAAI,GAAG;QAC9D;IACF;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B"}}]
}