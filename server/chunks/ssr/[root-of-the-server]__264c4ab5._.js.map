{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport 'dotenv/config';\n\nconst inquirySchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  email: z.string().email(\"Please enter a valid email address.\"),\n  message: z.string().min(10, \"Message must be at least 10 characters.\"),\n  vehicle: z.string(),\n});\n\nexport async function submitInquiry(prevState: any, formData: FormData) {\n  const validatedFields = inquirySchema.safeParse({\n    name: formData.get(\"name\"),\n    email: formData.get(\"email\"),\n    message: formData.get(\"message\"),\n    vehicle: formData.get(\"vehicle\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Error: Please check the form fields.\",\n    };\n  }\n  \n  // In a real application, you would send an email, save to a database, etc.\n  console.log(\"New Inquiry Received:\", validatedFields.data);\n\n  return {\n    message: \"Success! Your inquiry has been sent.\",\n    errors: {},\n  };\n}\n\nconst prebookSchema = z.object({\n  inGameName: z.string().min(2, \"In-game name must be at least 2 characters.\"),\n  discordId: z.string().min(2, \"Discord ID must be at least 2 characters.\"),\n  inGameNumber: z.string().optional(),\n  pickupTime: z.string().nonempty(\"Please select a pickup time.\"),\n  vehicle: z.string(),\n});\n\nexport async function prebookVehicle(prevState: any, formData: FormData) {\n    const validatedFields = prebookSchema.safeParse({\n        inGameName: formData.get(\"inGameName\"),\n        discordId: formData.get(\"discordId\"),\n        inGameNumber: formData.get(\"inGameNumber\"),\n        pickupTime: formData.get(\"pickupTime\"),\n        vehicle: formData.get(\"vehicle\"),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: \"Error: Please check the form fields.\",\n        };\n    }\n\n    // In a real application, you would save this pre-booking to a database.\n    console.log(\"New Pre-booking Received:\", validatedFields.data);\n    \n    const { inGameName, discordId, inGameNumber, pickupTime, vehicle } = validatedFields.data;\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n\n    if (webhookUrl) {\n      const discordMessage = {\n        embeds: [{\n          title: \"New Vehicle Pre-booking! ðŸš—\",\n          color: 5814783,\n          fields: [\n            { name: \"Vehicle\", value: vehicle, inline: false },\n            { name: \"In-Game Name\", value: inGameName, inline: true },\n            { name: \"Discord ID\", value: discordId, inline: true },\n            { name: \"In-Game Number\", value: inGameNumber || 'Not Provided', inline: true },\n            { name: \"Pickup Time\", value: `${pickupTime} (approx. 20 min window)`, inline: false },\n          ],\n          timestamp: new Date().toISOString(),\n          footer: {\n            text: \"LMC Motors Pre-booking System\"\n          }\n        }]\n      };\n\n      try {\n        const response = await fetch(webhookUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(discordMessage),\n        });\n\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"Discord webhook failed:\", response.status, errorText);\n            // We don't want to block the user flow if Discord fails, so we won't return an error message here\n        }\n\n      } catch (error) {\n        console.error(\"Failed to send Discord notification:\", error);\n        // We don't want to block the user flow if Discord fails.\n      }\n    } else {\n        console.warn(\"DISCORD_WEBHOOK_URL not set. Skipping notification.\");\n    }\n\n\n    return {\n        message: `Success! You've pre-booked the ${validatedFields.data.vehicle}. We will contact you shortly.`,\n        errors: {},\n    };\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/vehicles/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {prebookVehicle as '60b1378917791b3946bf26d792a336723fe287bc1f'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vehicles/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/vehicles/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/vehicles/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/vehicles/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/vehicles/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/vehicles/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}