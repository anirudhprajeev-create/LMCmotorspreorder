{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm backdrop-blur-md\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6EACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport 'dotenv/config';\nimport { createSession, deleteSession } from \"./session\";\nimport { redirect } from 'next/navigation'\n\nconst inquirySchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  email: z.string().email(\"Please enter a valid email address.\"),\n  message: z.string().min(10, \"Message must be at least 10 characters.\"),\n  vehicle: z.string(),\n});\n\nexport async function submitInquiry(prevState: any, formData: FormData) {\n  const validatedFields = inquirySchema.safeParse({\n    name: formData.get(\"name\"),\n    email: formData.get(\"email\"),\n    message: formData.get(\"message\"),\n    vehicle: formData.get(\"vehicle\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Error: Please check the form fields.\",\n    };\n  }\n  \n  // In a real application, you would send an email, save to a database, etc.\n  console.log(\"New Inquiry Received:\", validatedFields.data);\n\n  return {\n    message: \"Success! Your inquiry has been sent.\",\n    errors: {},\n  };\n}\n\nconst prebookSchema = z.object({\n  inGameName: z.string().min(2, \"In-game name must be at least 2 characters.\"),\n  discordId: z.string().min(2, \"Discord ID must be at least 2 characters.\"),\n  inGameNumber: z.string().optional(),\n  pickupTime: z.string().nonempty(\"Please select a pickup time.\"),\n  vehicle: z.string(),\n});\n\nexport async function prebookVehicle(prevState: any, formData: FormData) {\n    const validatedFields = prebookSchema.safeParse({\n        inGameName: formData.get(\"inGameName\"),\n        discordId: formData.get(\"discordId\"),\n        inGameNumber: formData.get(\"inGameNumber\"),\n        pickupTime: formData.get(\"pickupTime\"),\n        vehicle: formData.get(\"vehicle\"),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: \"Error: Please check the form fields.\",\n        };\n    }\n\n    // In a real application, you would save this pre-booking to a database.\n    console.log(\"New Pre-booking Received:\", validatedFields.data);\n    \n    const { inGameName, discordId, inGameNumber, pickupTime, vehicle } = validatedFields.data;\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n\n    if (webhookUrl) {\n      const discordMessage = {\n        embeds: [{\n          title: \"New Vehicle Pre-booking! ðŸš—\",\n          color: 5814783,\n          fields: [\n            { name: \"Vehicle\", value: vehicle, inline: false },\n            { name: \"In-Game Name\", value: inGameName, inline: true },\n            { name: \"Discord ID\", value: discordId, inline: true },\n            { name: \"In-Game Number\", value: inGameNumber || 'Not Provided', inline: true },\n            { name: \"Pickup Time\", value: `${pickupTime} (approx. 20 min window)`, inline: false },\n          ],\n          timestamp: new Date().toISOString(),\n          footer: {\n            text: \"LMC Motors Pre-booking System\"\n          }\n        }]\n      };\n\n      try {\n        const response = await fetch(webhookUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(discordMessage),\n        });\n\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"Discord webhook failed:\", response.status, errorText);\n            // We don't want to block the user flow if Discord fails, so we won't return an error message here\n        }\n\n      } catch (error) {\n        console.error(\"Failed to send Discord notification:\", error);\n        // We don't want to block the user flow if Discord fails.\n      }\n    } else {\n        console.warn(\"DISCORD_WEBHOOK_URL not set. Skipping notification.\");\n    }\n\n\n    return {\n        message: `Success! You've pre-booked the ${validatedFields.data.vehicle}. We will contact you shortly.`,\n        errors: {},\n    };\n}\n\n\nconst loginSchema = z.object({\n  password: z.string().min(1, \"Password is required.\"),\n});\n\nexport async function login(prevState: any, formData: FormData) {\n  const validatedFields = loginSchema.safeParse({\n    password: formData.get(\"password\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Please enter a password.\",\n    };\n  }\n\n  const { password } = validatedFields.data;\n\n  if (password === process.env.ADMIN_PASSWORD) {\n    await createSession();\n    redirect('/admin/dashboard');\n  } else {\n    return {\n      message: \"Invalid password.\",\n      errors: {},\n    };\n  }\n}\n\nexport async function logout() {\n    await deleteSession();\n    redirect('/admin/login');\n}\n"],"names":[],"mappings":";;;;;;IAesB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/actions.ts"],"sourcesContent":["\n\"use server\";\n\nimport { z } from \"zod\";\nimport 'dotenv/config';\nimport { createSession, deleteSession } from \"./session\";\nimport { redirect } from 'next/navigation'\n\nconst inquirySchema = z.object({\n  name: z.string().min(2, \"Name must be at least 2 characters.\"),\n  email: z.string().email(\"Please enter a valid email address.\"),\n  message: z.string().min(10, \"Message must be at least 10 characters.\"),\n  vehicle: z.string(),\n});\n\nexport async function submitInquiry(prevState: any, formData: FormData) {\n  const validatedFields = inquirySchema.safeParse({\n    name: formData.get(\"name\"),\n    email: formData.get(\"email\"),\n    message: formData.get(\"message\"),\n    vehicle: formData.get(\"vehicle\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Error: Please check the form fields.\",\n    };\n  }\n  \n  // In a real application, you would send an email, save to a database, etc.\n  console.log(\"New Inquiry Received:\", validatedFields.data);\n\n  return {\n    message: \"Success! Your inquiry has been sent.\",\n    errors: {},\n  };\n}\n\nconst prebookSchema = z.object({\n  inGameName: z.string().min(2, \"In-game name must be at least 2 characters.\"),\n  discordId: z.string().min(2, \"Discord ID must be at least 2 characters.\"),\n  inGameNumber: z.string().optional(),\n  pickupTime: z.string().nonempty(\"Please select a pickup time.\"),\n  vehicle: z.string(),\n});\n\nexport async function prebookVehicle(prevState: any, formData: FormData) {\n    const validatedFields = prebookSchema.safeParse({\n        inGameName: formData.get(\"inGameName\"),\n        discordId: formData.get(\"discordId\"),\n        inGameNumber: formData.get(\"inGameNumber\"),\n        pickupTime: formData.get(\"pickupTime\"),\n        vehicle: formData.get(\"vehicle\"),\n    });\n\n    if (!validatedFields.success) {\n        return {\n            errors: validatedFields.error.flatten().fieldErrors,\n            message: \"Error: Please check the form fields.\",\n        };\n    }\n\n    // In a real application, you would save this pre-booking to a database.\n    console.log(\"New Pre-booking Received:\", validatedFields.data);\n    \n    const { inGameName, discordId, inGameNumber, pickupTime, vehicle } = validatedFields.data;\n    const webhookUrl = process.env.DISCORD_WEBHOOK_URL;\n\n    if (webhookUrl) {\n      const discordMessage = {\n        embeds: [{\n          title: \"New Vehicle Pre-booking! ðŸš—\",\n          color: 5814783,\n          fields: [\n            { name: \"Vehicle\", value: vehicle, inline: false },\n            { name: \"In-Game Name\", value: inGameName, inline: true },\n            { name: \"Discord ID\", value: discordId, inline: true },\n            { name: \"In-Game Number\", value: inGameNumber || 'Not Provided', inline: true },\n            { name: \"Pickup Time\", value: `${pickupTime} (approx. 20 min window)`, inline: false },\n          ],\n          timestamp: new Date().toISOString(),\n          footer: {\n            text: \"LMC Motors Pre-booking System\"\n          }\n        }]\n      };\n\n      try {\n        const response = await fetch(webhookUrl, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(discordMessage),\n        });\n\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error(\"Discord webhook failed:\", response.status, errorText);\n            // We don't want to block the user flow if Discord fails, so we won't return an error message here\n        }\n\n      } catch (error) {\n        console.error(\"Failed to send Discord notification:\", error);\n        // We don't want to block the user flow if Discord fails.\n      }\n    } else {\n        console.warn(\"DISCORD_WEBHOOK_URL not set. Skipping notification.\");\n    }\n\n\n    return {\n        message: `Success! You've pre-booked the ${validatedFields.data.vehicle}. We will contact you shortly.`,\n        errors: {},\n    };\n}\n\n\nconst loginSchema = z.object({\n  password: z.string().min(1, \"Password is required.\"),\n});\n\nexport async function login(prevState: any, formData: FormData) {\n  const validatedFields = loginSchema.safeParse({\n    password: formData.get(\"password\"),\n  });\n\n  if (!validatedFields.success) {\n    return {\n      errors: validatedFields.error.flatten().fieldErrors,\n      message: \"Please enter a password.\",\n    };\n  }\n\n  const { password } = validatedFields.data;\n\n  if (password === process.env.ADMIN_PASSWORD) {\n    await createSession();\n    redirect('/admin/dashboard');\n  } else {\n    return {\n      message: \"Invalid password.\",\n      errors: {},\n    };\n  }\n}\n\nexport async function logout() {\n    await deleteSession();\n    redirect('/admin/login');\n}\n"],"names":[],"mappings":";;;;;;IA+CsB,iBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 695, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/submit-button.tsx"],"sourcesContent":["\n'use client';\n\nimport { useFormStatus } from 'react-dom';\nimport { Button } from '@/components/ui/button';\nimport { Loader2 } from 'lucide-react';\n\nexport function SubmitButton({label, icon}: {label: string; icon?: React.ReactNode}) {\n    const { pending } = useFormStatus();\n    return (\n        <Button type=\"submit\" disabled={pending}>\n            {pending ? <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> : icon}\n            {label}\n        </Button>\n    );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;;;AAJA;;;;AAMO,SAAS,aAAa,EAAC,KAAK,EAAE,IAAI,EAA0C;;IAC/E,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,oKAAA,CAAA,gBAAa,AAAD;IAChC,qBACI,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAK;QAAS,UAAU;;YAC3B,wBAAU,6LAAC,oNAAA,CAAA,UAAO;gBAAC,WAAU;;;;;uBAAiC;YAC9D;;;;;;;AAGb;GARgB;;QACQ,oKAAA,CAAA,gBAAa;;;KADrB","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/vehicle-details-client.tsx"],"sourcesContent":["\n'use client';\nimport Image from 'next/image';\nimport { useActionState } from 'react-dom';\nimport { useEffect, useState } from 'react';\nimport { Card, CardContent } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Textarea } from '@/components/ui/textarea';\nimport type { Vehicle } from '@/lib/types';\nimport { submitInquiry, prebookVehicle } from '@/lib/actions';\nimport { useToast } from '@/hooks/use-toast';\nimport { Send, CalendarCheck, Twitter, Facebook, Link as LinkIcon } from 'lucide-react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription, DialogTrigger, DialogFooter, DialogClose } from '@/components/ui/dialog';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { timeSlots, formatPrice } from '@/lib/utils';\nimport { SubmitButton } from './submit-button';\n\ntype VehicleDetailsClientProps = {\n  vehicle: Vehicle;\n};\n\n\nexport default function VehicleDetailsClient({ vehicle }: VehicleDetailsClientProps) {\n    const { toast } = useToast();\n    \n    const initialInquiryState = { message: null, errors: {} };\n    const [inquiryState, inquiryDispatch] = useActionState(submitInquiry, initialInquiryState);\n\n    const initialPrebookState = { message: null, errors: {} };\n    const [prebookState, prebookDispatch] = useActionState(prebookVehicle, initialPrebookState);\n    const [isPrebookDialogOpen, setIsPrebookDialogOpen] = useState(false);\n\n    useEffect(() => {\n        if (inquiryState.message?.startsWith('Success')) {\n          toast({\n            title: 'Inquiry Sent!',\n            description: inquiryState.message,\n          });\n        } else if (inquiryState.message?.startsWith('Error')) {\n          toast({\n            variant: 'destructive',\n            title: 'Error',\n            description: inquiryState.message,\n          });\n        }\n    }, [inquiryState, toast]);\n\n    useEffect(() => {\n        if (prebookState.message?.startsWith('Success')) {\n          toast({\n            title: 'Pre-booking Successful!',\n            description: prebookState.message,\n          });\n          setIsPrebookDialogOpen(false);\n        } else if (prebookState.message?.startsWith('Error')) {\n          toast({\n            variant: 'destructive',\n            title: 'Error',\n            description: prebookState.message,\n          });\n        }\n    }, [prebookState, toast]);\n\n    const handleShare = (platform: 'twitter' | 'facebook' | 'copy') => {\n        const url = window.location.href;\n        const text = `Check out this ${vehicle.make} ${vehicle.model} from LMC Motors!`;\n        let shareUrl = '';\n\n        if (platform === 'twitter') {\n            shareUrl = `https://twitter.com/intent/tweet?url=${encodeURIComponent(url)}&text=${encodeURIComponent(text)}`;\n        } else if (platform === 'facebook') {\n            shareUrl = `https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(url)}`;\n        } else if (platform === 'copy') {\n            navigator.clipboard.writeText(url).then(() => {\n                toast({ title: 'Link Copied!', description: 'URL copied to your clipboard.' });\n            });\n            return;\n        }\n\n        window.open(shareUrl, '_blank', 'noopener,noreferrer');\n    };\n\n  return (\n    <>\n      <div className=\"grid grid-cols-1 gap-8 md:grid-cols-5\">\n        <div className=\"md:col-span-3\">\n          <Card className=\"overflow-hidden\">\n            <div className=\"relative aspect-video w-full\">\n              <Image\n                src={vehicle.imageUrl}\n                alt={`Image of ${vehicle.make} ${vehicle.model}`}\n                fill\n                className=\"object-cover\"\n                sizes=\"(max-width: 768px) 100vw, 50vw\"\n              />\n            </div>\n          </Card>\n        </div>\n        <div className=\"md:col-span-2\">\n            <h1 className=\"mb-2 font-headline text-3xl font-bold md:text-4xl\">\n              {vehicle.make} {vehicle.model}\n            </h1>\n            <div className=\"mb-4 flex items-center gap-4\">\n                <p className=\"text-3xl font-bold text-primary\">{formatPrice(vehicle.price)}</p>\n            </div>\n             <p className=\"prose max-w-none text-card-foreground mb-4\">\n                {vehicle.description}\n              </p>\n            <div className='flex items-center gap-4 mb-4'>\n                <Dialog open={isPrebookDialogOpen} onOpenChange={setIsPrebookDialogOpen}>\n                  <DialogTrigger asChild>\n                    <Button size=\"lg\"><CalendarCheck className=\"mr-2 h-4 w-4\" /> Pre-book Vehicle</Button>\n                  </DialogTrigger>\n                  <DialogContent>\n                    <DialogHeader>\n                      <DialogTitle>Pre-book this Vehicle</DialogTitle>\n                      <DialogDescription>\n                        Secure your chance to own the {vehicle.make} {vehicle.model}. Fill out the form below.\n                      </DialogDescription>\n                    </DialogHeader>\n                    <form action={prebookDispatch}>\n                        <input type=\"hidden\" name=\"vehicle\" value={`${vehicle.make} ${vehicle.model}`} />\n                        <div className=\"space-y-4\">\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"prebook-ingame-name\">In-Game Name</Label>\n                                <Input id=\"prebook-ingame-name\" name=\"inGameName\" placeholder=\"Your In-Game Name\" required />\n                                {prebookState.errors?.inGameName && <p className=\"text-sm text-destructive\">{prebookState.errors.inGameName[0]}</p>}\n                            </div>\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"prebook-discord-id\">Discord ID</Label>\n                                <Input id=\"prebook-discord-id\" name=\"discordId\" placeholder=\"Your Discord ID\" required />\n                                {prebookState.errors?.discordId && <p className=\"text-sm text-destructive\">{prebookState.errors.discordId[0]}</p>}\n                            </div>\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"prebook-ingame-number\">In-Game Number</Label>\n                                <Input id=\"prebook-ingame-number\" name=\"inGameNumber\" placeholder=\"Your In-Game Number\" />\n                                {prebookState.errors?.inGameNumber && <p className=\"text-sm text-destructive\">{prebookState.errors.inGameNumber[0]}</p>}\n                            </div>\n                            <div className=\"space-y-2\">\n                                <Label htmlFor=\"prebook-pickup-time\">Pickup Time</Label>\n                                <Select name=\"pickupTime\" required>\n                                  <SelectTrigger>\n                                    <SelectValue placeholder=\"Select time\" />\n                                  </SelectTrigger>\n                                  <SelectContent>\n                                    <ScrollArea className=\"h-64\">\n                                      {timeSlots.map(time => <SelectItem key={`time-${time}`} value={time}>{time}</SelectItem>)}\n                                    </ScrollArea>\n                                  </SelectContent>\n                                </Select>\n                                {prebookState.errors?.pickupTime && <p className=\"text-sm text-destructive\">{prebookState.errors.pickupTime[0]}</p>}\n                                <p className=\"text-xs text-muted-foreground\">Pickup will be within 20 minutes of the selected time.</p>\n                            </div>\n                        </div>\n                         <DialogFooter className='pt-4'>\n                            <DialogClose asChild>\n                                <Button type=\"button\" variant=\"secondary\">Cancel</Button>\n                            </DialogClose>\n                            <SubmitButton label=\"Submit Pre-booking\" icon={<CalendarCheck className=\"mr-2 h-4 w-4\" />} />\n                        </DialogFooter>\n                    </form>\n                  </DialogContent>\n                </Dialog>\n            </div>\n            <div className=\"flex items-center gap-2\">\n                <p className=\"text-sm font-medium text-muted-foreground\">Share:</p>\n                <Button variant=\"outline\" size=\"icon\" onClick={() => handleShare('twitter')}><Twitter className=\"h-5 w-5\"/></Button>\n                <Button variant=\"outline\" size=\"icon\" onClick={() => handleShare('facebook')}><Facebook className=\"h-5 w-5\"/></Button>\n                <Button variant=\"outline\" size=\"icon\" onClick={() => handleShare('copy')}><LinkIcon className=\"h-5 w-5\"/></Button>\n            </div>\n        </div>\n      </div>\n      <div className=\"mt-8\">\n        <Card>\n          <CardContent className=\"pt-6\">\n            <h3 className=\"mb-4 text-lg font-medium\">Inquire about this vehicle</h3>\n            <form action={inquiryDispatch}>\n                <input type=\"hidden\" name=\"vehicle\" value={`${vehicle.make} ${vehicle.model}`} />\n                <div className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"name\">Name</Label>\n                        <Input id=\"name\" name=\"name\" placeholder=\"Your Name\" required />\n                         {inquiryState.errors?.name && <p className=\"text-sm text-destructive\">{inquiryState.errors.name[0]}</p>}\n                    </div>\n                     <div className=\"space-y-2\">\n                        <Label htmlFor=\"email\">Email</Label>\n                        <Input id=\"email\" name=\"email\" type=\"email\" placeholder=\"Your Email\" required />\n                         {inquiryState.errors?.email && <p className=\"text-sm text-destructive\">{inquiryState.errors.email[0]}</p>}\n                    </div>\n                    <div className=\"space-y-2\">\n                        <Label htmlFor=\"message\">Message</Label>\n                        <Textarea id=\"message\" name=\"message\" placeholder=\"I'm interested in this vehicle...\" required />\n                         {inquiryState.errors?.message && <p className=\"text-sm text-destructive\">{inquiryState.errors.message[0]}</p>}\n                    </div>\n                    <SubmitButton label=\"Send Inquiry\" icon={<Send className=\"mr-2 h-4 w-4\" />} />\n                </div>\n            </form>\n          </CardContent>\n        </Card>\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}